{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select3"
				},
				{
					"name": "CleanIDandTitle"
				},
				{
					"name": "ConcatCols"
				},
				{
					"name": "DeleteCols"
				},
				{
					"name": "DefineTitle"
				},
				{
					"name": "DefineGenres"
				},
				{
					"name": "DefineYear"
				},
				{
					"name": "DefineRating"
				},
				{
					"name": "FinalisedCols"
				},
				{
					"name": "filter1"
				},
				{
					"name": "PrimaryGenre"
				},
				{
					"name": "RankMoviesByRatings"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {{\"movie\":\"108583\"} as string,",
				"          {\"title\":\"Fawlty Towers (1975\"} as string,",
				"          {\"genres\":\"Comedy\"} as string,",
				"          {\"year\":\"-1980\"} as string,",
				"          {\"Rating\":\"1\"} as string,",
				"          {\"Rotton Tomato\":\"54\"} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          Col1 = {{\"movie\":\"108583\"},",
				"          Col2 = {\"title\":\"Fawlty Towers (1975\"},",
				"          Col3 = {\"genres\":\"Comedy\"},",
				"          Col4 = {\"year\":\"-1980\"},",
				"          Col5 = {\"Rating\":\"1\"},",
				"          Col6 = {\"Rotton Tomato\":\"54\"}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 derive(Col1 = substring(Col1, 11, length(Col1) - 11)\r",
				",",
				"          Col2 = substring(Col2, 10, length(Col2) - 9)\r",
				") ~> CleanIDandTitle",
				"CleanIDandTitle derive(Concat = concat(Col2, Col3, Col4, Col5)) ~> ConcatCols",
				"ConcatCols select(mapColumn(",
				"          Col1,",
				"          Concat",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DeleteCols",
				"DeleteCols derive(Title = split(Concat, '\"\"genres\":\"')[1]\r",
				",",
				"          ConcatA = split(Concat, '\"\"genres\":\"')[2]) ~> DefineTitle",
				"DefineTitle derive(Genres = split(ConcatA, '\"\"year\":\"')[1],",
				"          ConcatB = split(ConcatA, '\"\"year\":\"')[2]) ~> DefineGenres",
				"DefineGenres derive(Year = toInteger(split(ConcatB, '\"')[1]),",
				"          ConcatC = split(ConcatB, 'Rating\":\"')[2]) ~> DefineYear",
				"DefineYear derive(Rating = toInteger(split(ConcatC, '\"')[1])) ~> DefineRating",
				"DefineRating select(mapColumn(",
				"          Col1,",
				"          Title,",
				"          Genres,",
				"          Year,",
				"          Rating",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FinalisedCols",
				"FinalisedCols filter(and(toInteger(Year)>1950, not(isNull(Rating))) ) ~> filter1",
				"filter1 derive(PrimaryGenre = iif(locate('|', Genres) > 1, left(Genres, locate('|', Genres)-1), Genres)) ~> PrimaryGenre",
				"PrimaryGenre window(over(PrimaryGenre,",
				"          Year),",
				"     desc(Rating, true),",
				"     RatingsRank = rank()) ~> RankMoviesByRatings"
			]
		}
	}
}